name: Website Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - ".github/workflows/**"

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true # Fetch Hugo themes
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "latest"
          extended: true

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Cache Puppeteer browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/puppeteer
          key: ${{ runner.os }}-puppeteer-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-puppeteer-

      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true

      - name: Install Chromium for Puppeteer
        run: npx puppeteer browsers install chrome

      - name: Run Hugo build tests
        run: npm run test:hugo

      - name: Build site
        run: hugo --gc --minify

      - name: Upload Hugo build artifact
        uses: actions/upload-artifact@v4
        with:
          name: hugo-public
          path: public/
          retention-days: 1

      - name: Start Hugo server
        run: |
          hugo server &
          sleep 5  # Wait for server to start

      - name: Run functional tests
        run: npm run test:functional

      - name: Run accessibility tests
        run: npm run test:accessibility

      - name: Run link checker
        run: npm run test:links
        continue-on-error: true # Don't fail on broken external links

      - name: Check security headers
        run: |
          if [ -f "_headers" ]; then
            echo "Checking security headers..."
            grep -q "X-Frame-Options" _headers || echo "::warning::X-Frame-Options header not found"
            grep -q "X-Content-Type-Options" _headers || echo "::warning::X-Content-Type-Options header not found"
            grep -q "Referrer-Policy" _headers || echo "::warning::Referrer-Policy header not found"
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            test-results/
            public/

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate HTML
        uses: Cyb3r-Jak3/html5validator-action@v7.2.0
        with:
          root: public/
        continue-on-error: true

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Need 2 commits for diff

      - name: Check for content changes
        id: content-changed
        run: |
          if git diff --name-only HEAD^ HEAD | grep -qE '^(content/|static/|themes/|layouts/|config\.yaml)'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Download Hugo build
        if: steps.content-changed.outputs.changed == 'true'
        uses: actions/download-artifact@v4
        with:
          name: hugo-public
          path: public/

      - name: Setup Hugo
        if: steps.content-changed.outputs.changed == 'true'
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "latest"

      - name: Setup Node.js
        if: steps.content-changed.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Run Lighthouse CI
        if: steps.content-changed.outputs.changed == 'true'
        run: |
          npm install -g @lhci/cli@0.12.x
          hugo server &
          sleep 5
          lhci autorun --collect.url=http://localhost:1313 --collect.url=http://localhost:1313/talks || true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "latest"

      - name: Build site
        run: hugo --gc --minify --buildFuture

      - name: Deploy to Netlify Preview
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: "./public"
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: false
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
