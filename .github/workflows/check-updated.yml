name: Check if Hugo page has been updated
permissions:
  contents: read
  issues: write
on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MODIFIED_DAYS: 9
  PAGE: ""
  PAGE_TITLE: ""
  PAGE_BODY: ""

jobs:
  check-updated:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '1'
      - name: Find outdated pages
        id: outdated-pages
        run: |
          find content -type f -name "*.md" | while read -r page; do
            modified=$(git log -1 --format=%ct -- $page)
            now=$(date +%s)
            days_since_modified=$(( (now - modified) / 86400 ))
            if [ $days_since_modified -gt "$MODIFIED_DAYS" ]; then
              echo "Page $page hasn't been updated for more than $MODIFIED_DAYS days"
              echo "PAGE=$page" >> $GITHUB_OUTPUT
              echo "PAGE_TITLE='Page $page hasn't been updated for $days_since_modified days'" >> $GITHUB_OUTPUT
              echo "PAGE_BODY='The following page hasn't been updated for $days_since_modified days: $page'" >> $GITHUB_OUTPUT
              echo "Create issue for page: $page"
            else
              echo "Page $page is up to date, it was modified $days_since_modified days ago"
            fi
          done
      - name: Check and create GitHub issue if not exists
        uses: actions/github-script@v5
        if: (steps.outdated-pages.outputs.PAGE)
        with:
          script: |
            const title = 'Page out of date ${{ steps.outdated-pages.outputs.PAGE_TITLE }}';
            const body = ${{ steps.outdated-pages.outputs.PAGE_BODY }};
            const labels = ['documentation', 'help wanted'];
            // Fetch existing issues
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
            });

            // Check if an issue with the same title exists
            const existingIssue = issues.data.find(issue => issue.title === title);

            if (existingIssue) {
              console.log('Issue already exists with number:', existingIssue.number);
            } else {
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: labels
              });

              console.log('Issue created with number:', issue.data.number);
            }
          github-token: ${{ secrets.GITHUB_TOKEN }}
